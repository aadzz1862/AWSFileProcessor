{"ast":null,"code":"// src/components/UploadForm.js\nimport React,{useState}from'react';// import AWS from 'aws-sdk';\nimport{ToastContainer,toast}from'react-toastify';import'react-toastify/dist/ReactToastify.css';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const UploadForm=()=>{const[inputText,setInputText]=useState('');const[selectedFile,setSelectedFile]=useState(null);const handleTextInputChange=event=>{setInputText(event.target.value);};const handleFileInputChange=event=>{setSelectedFile(event.target.files[0]);};const handleSubmit=async event=>{event.preventDefault();if(selectedFile){const bucket_name='pocprojectbucket';const apiGatewayUrl_SignedUrl='https://35v451qfkc.execute-api.us-east-2.amazonaws.com/dev/s3-signedurl';const apiKey='1L1KKXWm3X3IBbuvsmBn55t8gH0JQdzl2OIB5rxe';try{// Define headers for the request\nconst config={headers:{'x-api-key':apiKey,'Content-Type':'application/json'}};const getSignedUrl=async(fileName,contentType)=>{const response=await axios.post(apiGatewayUrl_SignedUrl,{fileName,contentType},config);return response.data.url;};const uploadFile=async file=>{const url=await getSignedUrl(file.name,file.type);// PUT request: upload file to S3\nconst result=await fetch(url,{method:\"PUT\",body:file});};uploadFile(selectedFile);// Show success notification\ntoast.success('File uploaded successfully !',{autoClose:3000// Close after 3 seconds\n});const s3Path=\"s3://\".concat(bucket_name,\"/\").concat(selectedFile.name);const apiGatewayUrl_fileinfo='https://08lgx212oh.execute-api.us-east-2.amazonaws.com/dev/fileprocessor';const apiResponse=await fetch(apiGatewayUrl_fileinfo,{method:'POST',headers:{'Content-Type':'application/json','x-api-key':apiKey},body:JSON.stringify({input_text:inputText,input_file_path:s3Path})});if(!apiResponse.ok){throw new Error(\"HTTP error! status: \".concat(apiResponse.status));}const apiData=await apiResponse.json();console.log('Data saved to DynamoDB:',apiData);// alert('File information saved successfully!');\n// Show success notification\ntoast.success('Input information saved successfully!',{autoClose:3000// Close after 3 seconds\n});// Reset input text and chosen file after successful upload and save\nsetInputText('');setSelectedFile(null);document.getElementById('file-input').value='';}catch(err){console.error('Error:',err);alert('Error uploading file or saving data: '+err.message);}}else{alert('Please select a file to upload.');}};return/*#__PURE__*/_jsx(\"div\",{class:\"container\",children:/*#__PURE__*/_jsx(\"div\",{class:\"form-box\",children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"label\",{for:\"text-input\",children:\"Text input:\"}),/*#__PURE__*/_jsx(\"input\",{id:\"text-input\",type:\"text\",value:inputText,onChange:handleTextInputChange,placeholder:\"Enter text here\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"label\",{for:\"file-input\",children:\"File input:\"}),/*#__PURE__*/_jsx(\"input\",{id:\"file-input\",type:\"file\",onChange:handleFileInputChange}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Submit\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(ToastContainer,{})]})})});};export default UploadForm;","map":{"version":3,"names":["React","useState","ToastContainer","toast","axios","jsx","_jsx","jsxs","_jsxs","UploadForm","inputText","setInputText","selectedFile","setSelectedFile","handleTextInputChange","event","target","value","handleFileInputChange","files","handleSubmit","preventDefault","bucket_name","apiGatewayUrl_SignedUrl","apiKey","config","headers","getSignedUrl","fileName","contentType","response","post","data","url","uploadFile","file","name","type","result","fetch","method","body","success","autoClose","s3Path","concat","apiGatewayUrl_fileinfo","apiResponse","JSON","stringify","input_text","input_file_path","ok","Error","status","apiData","json","console","log","document","getElementById","err","error","alert","message","class","children","onSubmit","for","id","onChange","placeholder"],"sources":["/Users/kakkachi/Backup/04132024/Src/AWSFileProcessor/poc-react-app/src/components/UploadForm.js"],"sourcesContent":["// src/components/UploadForm.js\r\n\r\nimport React, { useState } from 'react';\r\n// import AWS from 'aws-sdk';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport axios from 'axios';\r\n\r\nconst UploadForm = () => {\r\n  const [inputText, setInputText] = useState('');\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n\r\n  const handleTextInputChange = (event) => {\r\n    setInputText(event.target.value);\r\n  };\r\n\r\n  const handleFileInputChange = (event) => {\r\n    setSelectedFile(event.target.files[0]);\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (selectedFile) {\r\n\r\n      const bucket_name = 'pocprojectbucket';\r\n\r\n      const apiGatewayUrl_SignedUrl = 'https://35v451qfkc.execute-api.us-east-2.amazonaws.com/dev/s3-signedurl';\r\n      const apiKey = '1L1KKXWm3X3IBbuvsmBn55t8gH0JQdzl2OIB5rxe'; \r\n\r\n      try {\r\n\r\n        // Define headers for the request\r\n        const config = {\r\n          headers: {\r\n              'x-api-key': apiKey, \r\n              'Content-Type': 'application/json' \r\n          }\r\n        };\r\n\r\n        const getSignedUrl = async (fileName, contentType) => {\r\n          const response = await axios.post(apiGatewayUrl_SignedUrl, {\r\n            fileName,\r\n            contentType\r\n          }, config);\r\n\r\n          return response.data.url;\r\n        };\r\n\r\n\r\n        const uploadFile = async (file) => {\r\n          const url = await getSignedUrl(file.name, file.type);\r\n\r\n          // PUT request: upload file to S3\r\n          const result = await fetch(url, {\r\n            method: \"PUT\",\r\n            body: file,\r\n          });\r\n\r\n\r\n        };\r\n\r\n        uploadFile(selectedFile);\r\n\r\n        // Show success notification\r\n        toast.success('File uploaded successfully !', {\r\n          autoClose: 3000, // Close after 3 seconds\r\n        });\r\n\r\n        const s3Path = `s3://${bucket_name }/${selectedFile.name}`;\r\n\r\n        \r\n        const apiGatewayUrl_fileinfo = 'https://08lgx212oh.execute-api.us-east-2.amazonaws.com/dev/fileprocessor';\r\n        \r\n\r\n        const apiResponse = await fetch(apiGatewayUrl_fileinfo, {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'x-api-key': apiKey,\r\n          },\r\n          body: JSON.stringify({\r\n            input_text: inputText, \r\n            input_file_path: s3Path,\r\n          }),\r\n        });\r\n\r\n        if (!apiResponse.ok) {\r\n          throw new Error(`HTTP error! status: ${apiResponse.status}`);\r\n        }\r\n\r\n        const apiData = await apiResponse.json();\r\n        console.log('Data saved to DynamoDB:', apiData);\r\n        // alert('File information saved successfully!');\r\n\r\n        // Show success notification\r\n        toast.success('Input information saved successfully!', {\r\n          autoClose: 3000, // Close after 3 seconds\r\n        });\r\n\r\n        // Reset input text and chosen file after successful upload and save\r\n        setInputText('');\r\n        setSelectedFile(null);\r\n        document.getElementById('file-input').value = '';\r\n\r\n\r\n      } catch (err) {\r\n        console.error('Error:', err);\r\n        alert('Error uploading file or saving data: ' + err.message);\r\n      }\r\n    } else {\r\n      alert('Please select a file to upload.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div class=\"container\">\r\n  <div class=\"form-box\">\r\n    <form onSubmit={handleSubmit}>\r\n      <label for=\"text-input\">Text input:</label>\r\n      <input\r\n        id=\"text-input\"\r\n        type=\"text\"\r\n        value={inputText}\r\n        onChange={handleTextInputChange}\r\n        placeholder=\"Enter text here\"\r\n      />\r\n      <br />\r\n      <label for=\"file-input\">File input:</label>\r\n      <input\r\n        id=\"file-input\"\r\n        type=\"file\"\r\n        onChange={handleFileInputChange}\r\n      />\r\n      <br />\r\n      <button type=\"submit\">Submit</button>\r\n      <br/>\r\n      <ToastContainer />\r\n    </form>\r\n  </div>\r\n</div>\r\n  );\r\n};\r\n\r\nexport default UploadForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}