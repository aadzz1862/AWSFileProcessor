{"ast":null,"code":"var _jsxFileName = \"/Users/kakkachi/Src/AWSFileProcessor/poc-react-app/src/components/UploadForm.js\",\n  _s = $RefreshSig$();\n// src/components/UploadForm.js\n\nimport React, { useState } from 'react';\n// import AWS from 'aws-sdk';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadForm = () => {\n  _s();\n  const [inputText, setInputText] = useState('');\n  const [selectedFile, setSelectedFile] = useState(null);\n  const handleTextInputChange = event => {\n    setInputText(event.target.value);\n  };\n  const handleFileInputChange = event => {\n    setSelectedFile(event.target.files[0]);\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (selectedFile) {\n      // const s3 = new AWS.S3();\n\n      // const bucket_name = 'pocprojectbucket';\n\n      try {\n        const apiGatewayUrl_SignedUrl = 'https://35v451qfkc.execute-api.us-east-2.amazonaws.com/dev/s3-signedurl';\n        const getSignedUrl = async (fileName, contentType) => {\n          const response = await axios.post(apiGatewayUrl_SignedUrl, {\n            fileName,\n            contentType\n          });\n          return response.data.url;\n        };\n        const uploadFile = async file => {\n          const url = await getSignedUrl(file.name, file.type);\n          const options = {\n            headers: {\n              'Content-Type': file.type\n            }\n          };\n          await axios.put(url, file, options);\n        };\n        uploadFile(selectedFile);\n\n        /*const uploadResponse = await s3.upload({\r\n          Bucket: bucket_name , \r\n          Key: selectedFile.name, \r\n          Body: selectedFile, \r\n        }).promise(); */\n\n        // alert('File uploaded successfully to: ' + uploadResponse.Location);\n        // Show success notification\n        toast.success('File uploaded successfully !', {\n          autoClose: 3000 // Close after 3 seconds\n        });\n        const s3Path = `s3://${bucket_name}/${selectedFile.name}`;\n        const apiGatewayUrl_fileinfo = 'https://08lgx212oh.execute-api.us-east-2.amazonaws.com/dev/fileprocessor';\n        const apiResponse = await fetch(apiGatewayUrl_fileinfo, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'x-api-key': '1L1KKXWm3X3IBbuvsmBn55t8gH0JQdzl2OIB5rxe'\n          },\n          body: JSON.stringify({\n            input_text: inputText,\n            input_file_path: s3Path\n          })\n        });\n        if (!apiResponse.ok) {\n          throw new Error(`HTTP error! status: ${apiResponse.status}`);\n        }\n        const apiData = await apiResponse.json();\n        console.log('Data saved to DynamoDB:', apiData);\n        // alert('File information saved successfully!');\n\n        // Show success notification\n        toast.success('Input information saved successfully!', {\n          autoClose: 3000 // Close after 3 seconds\n        });\n\n        // Reset input text and chosen file after successful upload and save\n        setInputText('');\n        setSelectedFile(null);\n        document.getElementById('file-input').value = '';\n      } catch (err) {\n        console.error('Error:', err);\n        alert('Error uploading file or saving data: ' + err.message);\n      }\n    } else {\n      alert('Please select a file to upload.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"form-box\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"text-input\",\n          children: \"Text input:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"text-input\",\n          type: \"text\",\n          value: inputText,\n          onChange: handleTextInputChange,\n          placeholder: \"Enter text here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"file-input\",\n          children: \"File input:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"file-input\",\n          type: \"file\",\n          onChange: handleFileInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadForm, \"m7Kht1UcFEtqxVY8B5FEjIDOyt0=\");\n_c = UploadForm;\nexport default UploadForm;\nvar _c;\n$RefreshReg$(_c, \"UploadForm\");","map":{"version":3,"names":["React","useState","ToastContainer","toast","axios","jsxDEV","_jsxDEV","UploadForm","_s","inputText","setInputText","selectedFile","setSelectedFile","handleTextInputChange","event","target","value","handleFileInputChange","files","handleSubmit","preventDefault","apiGatewayUrl_SignedUrl","getSignedUrl","fileName","contentType","response","post","data","url","uploadFile","file","name","type","options","headers","put","success","autoClose","s3Path","bucket_name","apiGatewayUrl_fileinfo","apiResponse","fetch","method","body","JSON","stringify","input_text","input_file_path","ok","Error","status","apiData","json","console","log","document","getElementById","err","error","alert","message","class","children","onSubmit","for","_jsxFileName","lineNumber","columnNumber","id","onChange","placeholder","_c","$RefreshReg$"],"sources":["/Users/kakkachi/Src/AWSFileProcessor/poc-react-app/src/components/UploadForm.js"],"sourcesContent":["// src/components/UploadForm.js\r\n\r\nimport React, { useState } from 'react';\r\n// import AWS from 'aws-sdk';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport axios from 'axios';\r\n\r\nconst UploadForm = () => {\r\n  const [inputText, setInputText] = useState('');\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n\r\n  const handleTextInputChange = (event) => {\r\n    setInputText(event.target.value);\r\n  };\r\n\r\n  const handleFileInputChange = (event) => {\r\n    setSelectedFile(event.target.files[0]);\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (selectedFile) {\r\n      // const s3 = new AWS.S3();\r\n\r\n      // const bucket_name = 'pocprojectbucket';\r\n\r\n\r\n      try {\r\n\r\n        const apiGatewayUrl_SignedUrl = 'https://35v451qfkc.execute-api.us-east-2.amazonaws.com/dev/s3-signedurl';\r\n\r\n        const getSignedUrl = async (fileName, contentType) => {\r\n          const response = await axios.post(apiGatewayUrl_SignedUrl, {\r\n            fileName,\r\n              contentType\r\n          });\r\n          return response.data.url;\r\n        };\r\n\r\n\r\n        const uploadFile = async (file) => {\r\n          const url = await getSignedUrl(file.name, file.type);\r\n          const options = {\r\n              headers: {\r\n                  'Content-Type': file.type,\r\n              },\r\n          };\r\n          await axios.put(url, file, options);\r\n        };\r\n\r\n\r\n        uploadFile(selectedFile);\r\n\r\n        /*const uploadResponse = await s3.upload({\r\n          Bucket: bucket_name , \r\n          Key: selectedFile.name, \r\n          Body: selectedFile, \r\n        }).promise(); */\r\n\r\n        // alert('File uploaded successfully to: ' + uploadResponse.Location);\r\n        // Show success notification\r\n        toast.success('File uploaded successfully !', {\r\n          autoClose: 3000, // Close after 3 seconds\r\n        });\r\n\r\n        const s3Path = `s3://${bucket_name }/${selectedFile.name}`;\r\n\r\n        \r\n        const apiGatewayUrl_fileinfo = 'https://08lgx212oh.execute-api.us-east-2.amazonaws.com/dev/fileprocessor';\r\n        \r\n\r\n        const apiResponse = await fetch(apiGatewayUrl_fileinfo, {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'x-api-key': '1L1KKXWm3X3IBbuvsmBn55t8gH0JQdzl2OIB5rxe',\r\n          },\r\n          body: JSON.stringify({\r\n            input_text: inputText, \r\n            input_file_path: s3Path,\r\n          }),\r\n        });\r\n\r\n        if (!apiResponse.ok) {\r\n          throw new Error(`HTTP error! status: ${apiResponse.status}`);\r\n        }\r\n\r\n        const apiData = await apiResponse.json();\r\n        console.log('Data saved to DynamoDB:', apiData);\r\n        // alert('File information saved successfully!');\r\n\r\n        // Show success notification\r\n        toast.success('Input information saved successfully!', {\r\n          autoClose: 3000, // Close after 3 seconds\r\n        });\r\n\r\n        // Reset input text and chosen file after successful upload and save\r\n        setInputText('');\r\n        setSelectedFile(null);\r\n        document.getElementById('file-input').value = '';\r\n\r\n\r\n      } catch (err) {\r\n        console.error('Error:', err);\r\n        alert('Error uploading file or saving data: ' + err.message);\r\n      }\r\n    } else {\r\n      alert('Please select a file to upload.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div class=\"container\">\r\n  <div class=\"form-box\">\r\n    <form onSubmit={handleSubmit}>\r\n      <label for=\"text-input\">Text input:</label>\r\n      <input\r\n        id=\"text-input\"\r\n        type=\"text\"\r\n        value={inputText}\r\n        onChange={handleTextInputChange}\r\n        placeholder=\"Enter text here\"\r\n      />\r\n      <br />\r\n      <label for=\"file-input\">File input:</label>\r\n      <input\r\n        id=\"file-input\"\r\n        type=\"file\"\r\n        onChange={handleFileInputChange}\r\n      />\r\n      <br />\r\n      <button type=\"submit\">Submit</button>\r\n      <br/>\r\n      <ToastContainer />\r\n    </form>\r\n  </div>\r\n</div>\r\n  );\r\n};\r\n\r\nexport default UploadForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}